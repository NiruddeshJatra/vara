# Generated by Django 5.1.4 on 2025-01-14 17:41

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rentals', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, validators=[django.core.validators.MinLengthValidator(10, 'Title must be at least 10 characters long')])),
                ('category', models.CharField(choices=[('payment', 'Payment Issue'), ('property', 'Property Condition'), ('behavior', 'User Behavior'), ('service', 'Service Quality'), ('other', 'Other')], default='other', max_length=50)),
                ('description', models.TextField(validators=[django.core.validators.MinLengthValidator(20, 'Description must be at least 20 characters long')])),
                ('evidence', models.JSONField(blank=True, help_text='Store URLs or references to uploaded evidence', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('under_review', 'Under Review'), ('resolved', 'Resolved'), ('cancelled', 'Cancelled'), ('escalated', 'Escalated')], default='pending', max_length=50)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=50)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('resolution_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_status_change', models.DateTimeField(auto_now_add=True)),
                ('response_deadline', models.DateTimeField(blank=True, null=True)),
                ('against_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='complaints_received', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_complaints', to=settings.AUTH_USER_MODEL)),
                ('complainant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='filed_complaints', to=settings.AUTH_USER_MODEL)),
                ('rental_request', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='complaints', to='rentals.rental')),
            ],
            options={
                'ordering': ['-created_at'],
                'permissions': [('can_escalate_complaint', 'Can escalate complaint'), ('can_assign_complaint', 'Can assign complaint'), ('can_view_all_complaints', 'Can view all complaints')],
            },
        ),
        migrations.CreateModel(
            name='ComplaintUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('attachment', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('complaint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='complaints.complaint')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['status', 'created_at'], name='complaints__status_39c2ad_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['complainant'], name='complaints__complai_ff8001_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['against_user'], name='complaints__against_00062e_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['priority', 'status'], name='complaints__priorit_9b6e83_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['category'], name='complaints__categor_8115a1_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['assigned_to'], name='complaints__assigne_57ef98_idx'),
        ),
        migrations.AddConstraint(
            model_name='complaint',
            constraint=models.UniqueConstraint(fields=('complainant', 'against_user', 'rental_request'), name='unique_complaint_per_rental'),
        ),
        migrations.AddConstraint(
            model_name='complaint',
            constraint=models.CheckConstraint(condition=models.Q(('response_deadline__gt', models.F('created_at'))), name='response_deadline_after_creation'),
        ),
        migrations.AddIndex(
            model_name='complaintupdate',
            index=models.Index(fields=['complaint', 'created_at'], name='complaints__complai_36b92b_idx'),
        ),
    ]
