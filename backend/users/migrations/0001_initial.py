# Generated by Django 5.1.4 on 2025-04-21 22:21

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(db_index=True, help_text="User's email address, used as the primary identifier for login", max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, help_text="User's contact phone number", max_length=15, null=True)),
                ('location', models.CharField(blank=True, help_text="User's location or address", max_length=255, null=True)),
                ('profile_picture', models.ImageField(blank=True, help_text="User's profile picture (JPEG or PNG format)", null=True, upload_to='profile_pictures/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('date_of_birth', models.DateField(blank=True, help_text="User's date of birth", null=True)),
                ('bio', models.TextField(blank=True, help_text="User's biographical information or description", null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the user account was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the user account was last updated')),
                ('is_trusted', models.BooleanField(default=False, help_text='Indicates if the user has been verified as trustworthy by admins')),
                ('is_email_verified', models.BooleanField(default=False, help_text="Indicates if the user's email has been verified")),
                ('email_verification_token', models.CharField(blank=True, help_text='Token used for email verification', max_length=255, null=True)),
                ('marketing_consent', models.BooleanField(default=False, help_text='Indicates if the user has consented to receive marketing communications')),
                ('profile_completed', models.BooleanField(default=False, help_text='Indicates if the user has completed their profile with required information')),
                ('national_id_number', models.CharField(blank=True, help_text="User's national ID number (must be unique)", max_length=20, null=True, unique=True)),
                ('national_id_front', models.ImageField(blank=True, help_text="Front image of user's national ID document", null=True, upload_to='national_ids/front/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('national_id_back', models.ImageField(blank=True, help_text="Back image of user's national ID document", null=True, upload_to='national_ids/back/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, editable=False, help_text="User's average rating from reviews", max_digits=3)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
