# Generated by Django 5.1.4 on 2025-04-04 12:05

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('advertisements', '0021_remove_product_base_price_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PricingTier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('duration_unit', models.CharField(choices=[('day', 'Per Day'), ('week', 'Per Week'), ('month', 'Per Month')], help_text='Duration unit (day/week/month)', max_length=10)),
                ('price', models.DecimalField(decimal_places=2, help_text='Price per duration unit', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('max_period', models.PositiveIntegerField(default=30, help_text='Maximum rental period in the specified duration unit (optional, defaults to 30)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Pricing Tier',
                'verbose_name_plural': 'Pricing Tiers',
                'ordering': ['duration_unit', 'price'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(help_text='Product image file', max_length=255, upload_to='product_images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='UnavailableDate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(help_text='Single unavailable date')),
                ('is_range', models.BooleanField(default=False, help_text='Is this part of a date range?')),
                ('range_start', models.DateField(blank=True, help_text='Start date of range', null=True)),
                ('range_end', models.DateField(blank=True, help_text='End date of range', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Unavailable Date',
                'verbose_name_plural': 'Unavailable Dates',
                'ordering': ['date'],
            },
        ),
        migrations.AlterModelOptions(
            name='product',
            options={'ordering': ['-created_at'], 'verbose_name': 'Product', 'verbose_name_plural': 'Products'},
        ),
        migrations.RemoveIndex(
            model_name='product',
            name='advertiseme_product_ea1fd7_idx',
        ),
        migrations.RemoveField(
            model_name='product',
            name='condition',
        ),
        migrations.RemoveField(
            model_name='product',
            name='images',
        ),
        migrations.RemoveField(
            model_name='product',
            name='pricing_tiers',
        ),
        migrations.RemoveField(
            model_name='product',
            name='unavailable_dates',
        ),
        migrations.AlterField(
            model_name='product',
            name='category',
            field=models.CharField(choices=[('Photography & Videography', 'Photography & Videography'), ('Sports & Fitness', 'Sports & Fitness'), ('Tools & Equipment', 'Tools & Equipment'), ('Electronics', 'Electronics'), ('Musical Instruments', 'Musical Instruments'), ('Party & Events', 'Party & Events'), ('Fashion & Accessories', 'Fashion & Accessories'), ('Home & Garden', 'Home & Garden'), ('Books & Media', 'Books & Media'), ('Toys & Games', 'Toys & Games'), ('Automotive', 'Automotive'), ('Other', 'Other')], help_text='Product category', max_length=50),
        ),
        migrations.AlterField(
            model_name='product',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='description',
            field=models.TextField(help_text='Product description'),
        ),
        migrations.AlterField(
            model_name='product',
            name='location',
            field=models.CharField(help_text='Product location', max_length=255),
        ),
        migrations.AlterField(
            model_name='product',
            name='original_price',
            field=models.DecimalField(decimal_places=2, help_text='Original purchase price', max_digits=10),
        ),
        migrations.AlterField(
            model_name='product',
            name='ownership_history',
            field=models.CharField(choices=[('firsthand', 'First Hand'), ('secondhand', 'Second Hand')], help_text='Ownership history', max_length=20),
        ),
        migrations.AlterField(
            model_name='product',
            name='product_type',
            field=models.CharField(choices=[('camera', 'Photography & Videography'), ('lens', 'Photography & Videography'), ('gimbal', 'Photography & Videography'), ('drone', 'Photography & Videography'), ('lighting', 'Photography & Videography'), ('tripod', 'Photography & Videography'), ('microphone', 'Photography & Videography'), ('video_camera', 'Photography & Videography'), ('bicycle', 'Sports & Fitness'), ('treadmill', 'Sports & Fitness'), ('yoga_mat', 'Sports & Fitness'), ('dumbbells', 'Sports & Fitness'), ('sports_equipment', 'Sports & Fitness'), ('power_tools', 'Tools & Equipment'), ('hand_tools', 'Tools & Equipment'), ('gardening_tools', 'Tools & Equipment'), ('cleaning_equipment', 'Tools & Equipment'), ('laptop', 'Electronics'), ('tablet', 'Electronics'), ('smartphone', 'Electronics'), ('gaming_console', 'Electronics'), ('tv', 'Electronics'), ('speaker', 'Electronics'), ('guitar', 'Musical Instruments'), ('piano', 'Musical Instruments'), ('drums', 'Musical Instruments'), ('microphone', 'Musical Instruments'), ('amplifier', 'Musical Instruments'), ('tent', 'Party & Events'), ('table', 'Party & Events'), ('chair', 'Party & Events'), ('decorations', 'Party & Events'), ('sound_system', 'Party & Events'), ('formal_wear', 'Fashion & Accessories'), ('costume', 'Fashion & Accessories'), ('jewelry', 'Fashion & Accessories'), ('accessories', 'Fashion & Accessories'), ('furniture', 'Home & Garden'), ('kitchen_appliance', 'Home & Garden'), ('garden_tools', 'Home & Garden'), ('decor', 'Home & Garden'), ('book', 'Books & Media'), ('magazine', 'Books & Media'), ('movie', 'Books & Media'), ('game', 'Books & Media'), ('board_game', 'Toys & Games'), ('video_game', 'Toys & Games'), ('toy', 'Toys & Games'), ('puzzle', 'Toys & Games'), ('car', 'Automotive'), ('bike', 'Automotive'), ('scooter', 'Automotive'), ('accessories', 'Automotive'), ('other', 'Other')], help_text='Product type', max_length=50),
        ),
        migrations.AlterField(
            model_name='product',
            name='purchase_year',
            field=models.CharField(blank=True, help_text='Year of purchase', max_length=4, null=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='rental_count',
            field=models.PositiveIntegerField(default=0, help_text='Internal: Number of rentals'),
        ),
        migrations.AlterField(
            model_name='product',
            name='security_deposit',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Security deposit amount (optional)', max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft - Pending Review'), ('active', 'Active - Available for Rent'), ('maintenance', 'Under Maintenance - Needs Action'), ('suspended', 'Suspended - Listing Disabled')], default='draft', help_text='Product status (managed by admins)', max_length=20),
        ),
        migrations.AlterField(
            model_name='product',
            name='status_changed_at',
            field=models.DateTimeField(blank=True, help_text='When status was last changed by admin', null=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='status_message',
            field=models.TextField(blank=True, help_text='Admin message for status changes (e.g., maintenance or suspension reason)', null=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='title',
            field=models.CharField(help_text='Product title', max_length=255),
        ),
        migrations.AlterField(
            model_name='product',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='views_count',
            field=models.PositiveIntegerField(default=0, help_text='Internal: Number of views'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['created_at'], name='advertiseme_created_a42d99_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['average_rating'], name='advertiseme_average_c27816_idx'),
        ),
        migrations.AddField(
            model_name='pricingtier',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_tiers', to='advertisements.product'),
        ),
        migrations.AddField(
            model_name='productimage',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='advertisements.product'),
        ),
        migrations.AddField(
            model_name='unavailabledate',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unavailable_dates', to='advertisements.product'),
        ),
        migrations.AddConstraint(
            model_name='pricingtier',
            constraint=models.UniqueConstraint(fields=('product', 'duration_unit'), name='unique_duration_unit_per_product'),
        ),
        migrations.AddConstraint(
            model_name='unavailabledate',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('is_range', False), models.Q(('is_range', True), ('range_start__isnull', False), ('range_end__isnull', False), ('range_end__gte', models.F('range_start'))), _connector='OR')), name='valid_date_range'),
        ),
    ]
