# Generated by Django 5.1.4 on 2025-04-21 21:27

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PricingTier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('duration_unit', models.CharField(choices=[('day', 'Per Day'), ('week', 'Per Week'), ('month', 'Per Month')], help_text='Duration unit (day/week/month)', max_length=10)),
                ('price', models.PositiveIntegerField(help_text='Price per duration unit in Taka')),
                ('max_period', models.PositiveIntegerField(default=30, help_text='Maximum rental period in the specified duration unit (optional, defaults to 30)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Pricing Tier',
                'verbose_name_plural': 'Pricing Tiers',
                'ordering': ['duration_unit', 'price'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Product title', max_length=255)),
                ('category', models.CharField(choices=[('photography_videography', 'Photography & Videography'), ('sports_fitness', 'Sports & Fitness'), ('tools_equipment', 'Tools & Equipment'), ('electronics', 'Electronics'), ('musical_instruments', 'Musical Instruments'), ('party_events', 'Party & Events'), ('fashion_accessories', 'Fashion & Accessories'), ('home_garden', 'Home & Garden'), ('books_media', 'Books & Media'), ('toys_games', 'Toys & Games'), ('automotive', 'Automotive'), ('other', 'Other')], help_text='Product category', max_length=50)),
                ('product_type', models.CharField(choices=[('camera', 'photography_videography'), ('lens', 'photography_videography'), ('gimbal', 'photography_videography'), ('drone', 'photography_videography'), ('lighting', 'photography_videography'), ('tripod', 'photography_videography'), ('microphone', 'photography_videography'), ('video_camera', 'photography_videography'), ('bicycle', 'sports_fitness'), ('treadmill', 'sports_fitness'), ('yoga_mat', 'sports_fitness'), ('dumbbells', 'sports_fitness'), ('sports_equipment', 'sports_fitness'), ('power_tools', 'tools_equipment'), ('hand_tools', 'tools_equipment'), ('gardening_tools', 'tools_equipment'), ('cleaning_equipment', 'tools_equipment'), ('laptop', 'electronics'), ('tablet', 'electronics'), ('smartphone', 'electronics'), ('gaming_console', 'electronics'), ('tv', 'electronics'), ('speaker', 'electronics'), ('guitar', 'musical_instruments'), ('piano', 'musical_instruments'), ('drums', 'musical_instruments'), ('microphone', 'musical_instruments'), ('amplifier', 'musical_instruments'), ('tent', 'party_events'), ('table', 'party_events'), ('chair', 'party_events'), ('decorations', 'party_events'), ('sound_system', 'party_events'), ('formal_wear', 'fashion_accessories'), ('costume', 'fashion_accessories'), ('jewelry', 'fashion_accessories'), ('accessories', 'fashion_accessories'), ('furniture', 'home_garden'), ('kitchen_appliance', 'home_garden'), ('garden_tools', 'home_garden'), ('decor', 'home_garden'), ('book', 'books_media'), ('magazine', 'books_media'), ('movie', 'books_media'), ('game', 'books_media'), ('board_game', 'toys_games'), ('video_game', 'toys_games'), ('toy', 'toys_games'), ('puzzle', 'toys_games'), ('car', 'automotive'), ('bike', 'automotive'), ('scooter', 'automotive'), ('accessories', 'automotive'), ('other', 'other')], help_text='Product type', max_length=50)),
                ('description', models.TextField(help_text='Product description')),
                ('location', models.CharField(help_text='Product location', max_length=255)),
                ('security_deposit', models.DecimalField(blank=True, decimal_places=2, help_text='Security deposit amount (optional)', max_digits=10, null=True)),
                ('purchase_year', models.CharField(default='2025', help_text='Year of purchase (defaults to current year)', max_length=4)),
                ('original_price', models.DecimalField(decimal_places=2, help_text='Original purchase price', max_digits=10)),
                ('ownership_history', models.CharField(choices=[('firsthand', 'First Hand'), ('secondhand', 'Second Hand')], help_text='Ownership history', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft - Pending Review'), ('active', 'Active - Available for Rent'), ('maintenance', 'Under Maintenance - Needs Action'), ('suspended', 'Suspended - Listing Disabled')], default='draft', help_text='Product status (managed by admins)', max_length=20)),
                ('status_message', models.TextField(blank=True, help_text='Admin message for status changes (e.g., maintenance or suspension reason)', null=True)),
                ('status_changed_at', models.DateTimeField(blank=True, help_text='When status was last changed by admin', null=True)),
                ('views_count', models.PositiveIntegerField(default=0, help_text='Internal: Number of views')),
                ('rental_count', models.PositiveIntegerField(default=0, help_text='Internal: Number of rentals')),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, help_text='Average rating from all reviews', max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(help_text='Product image file', max_length=255, upload_to='product_images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='UnavailableDate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(help_text='Single unavailable date')),
                ('is_range', models.BooleanField(default=False, help_text='Is this part of a date range?')),
                ('range_start', models.DateField(blank=True, help_text='Start date of range', null=True)),
                ('range_end', models.DateField(blank=True, help_text='End date of range', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Unavailable Date',
                'verbose_name_plural': 'Unavailable Dates',
                'ordering': ['date'],
            },
        ),
    ]
