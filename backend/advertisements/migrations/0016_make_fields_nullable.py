# Generated by Django 5.1.4 on 2025-04-03 18:16

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('advertisements', '0015_fix_auto_now_add_fields'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PricingTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration_unit', models.CharField(choices=[('day', 'Per Day'), ('week', 'Per Week'), ('month', 'Per Month')], help_text='The unit of time for this pricing tier', max_length=5)),
                ('price', models.DecimalField(decimal_places=2, help_text='Price for this duration', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('max_period', models.PositiveIntegerField(blank=True, help_text='Maximum rental period in selected duration units', null=True)),
            ],
            options={
                'verbose_name': 'Pricing Tier',
                'verbose_name_plural': 'Pricing Tiers',
            },
        ),
        migrations.RemoveField(
            model_name='product',
            name='pricing',
        ),
        migrations.AlterModelOptions(
            name='productimage',
            options={'ordering': ['order'], 'verbose_name': 'Product Image', 'verbose_name_plural': 'Product Images'},
        ),
        migrations.RemoveIndex(
            model_name='product',
            name='advertiseme_is_avai_6820b9_idx',
        ),
        migrations.RemoveField(
            model_name='product',
            name='is_available',
        ),
        migrations.RemoveField(
            model_name='product',
            name='latitude',
        ),
        migrations.RemoveField(
            model_name='product',
            name='longitude',
        ),
        migrations.AddField(
            model_name='product',
            name='base_price',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Base rental price', max_digits=10, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='product',
            name='condition',
            field=models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('pending', 'Pending Review')], default='pending', help_text='The current condition of the product, updated by admins after review', max_length=20),
        ),
        migrations.AddField(
            model_name='product',
            name='duration_unit',
            field=models.CharField(choices=[('day', 'Per Day'), ('week', 'Per Week'), ('month', 'Per Month')], default='day', help_text='The unit of time for rental duration (day, week, month)', max_length=5),
        ),
        migrations.AddField(
            model_name='product',
            name='images',
            field=models.ManyToManyField(help_text='Images associated with this product', related_name='products', to='advertisements.productimage'),
        ),
        migrations.AddField(
            model_name='product',
            name='original_price',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Original purchase price', max_digits=10, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='product',
            name='ownership_history',
            field=models.CharField(choices=[('firsthand', 'First Hand'), ('secondhand', 'Second Hand')], default='firsthand', help_text='Whether the item was purchased new or used', max_length=20),
        ),
        migrations.AddField(
            model_name='product',
            name='product_type',
            field=models.CharField(choices=[('camera', 'Photography & Videography'), ('lens', 'Photography & Videography'), ('gimbal', 'Photography & Videography'), ('drone', 'Photography & Videography'), ('lighting', 'Photography & Videography'), ('tripod', 'Photography & Videography'), ('microphone', 'Photography & Videography'), ('video_camera', 'Photography & Videography'), ('bicycle', 'Sports & Fitness'), ('treadmill', 'Sports & Fitness'), ('yoga_mat', 'Sports & Fitness'), ('dumbbells', 'Sports & Fitness'), ('sports_equipment', 'Sports & Fitness'), ('power_tools', 'Tools & Equipment'), ('hand_tools', 'Tools & Equipment'), ('gardening_tools', 'Tools & Equipment'), ('cleaning_equipment', 'Tools & Equipment'), ('laptop', 'Electronics'), ('tablet', 'Electronics'), ('smartphone', 'Electronics'), ('gaming_console', 'Electronics'), ('tv', 'Electronics'), ('speaker', 'Electronics'), ('guitar', 'Musical Instruments'), ('piano', 'Musical Instruments'), ('drums', 'Musical Instruments'), ('microphone', 'Musical Instruments'), ('amplifier', 'Musical Instruments'), ('tent', 'Party & Events'), ('table', 'Party & Events'), ('chair', 'Party & Events'), ('decorations', 'Party & Events'), ('sound_system', 'Party & Events'), ('formal_wear', 'Fashion & Accessories'), ('costume', 'Fashion & Accessories'), ('jewelry', 'Fashion & Accessories'), ('accessories', 'Fashion & Accessories'), ('furniture', 'Home & Garden'), ('kitchen_appliance', 'Home & Garden'), ('garden_tools', 'Home & Garden'), ('decor', 'Home & Garden'), ('book', 'Books & Media'), ('magazine', 'Books & Media'), ('movie', 'Books & Media'), ('game', 'Books & Media'), ('board_game', 'Toys & Games'), ('video_game', 'Toys & Games'), ('toy', 'Toys & Games'), ('puzzle', 'Toys & Games'), ('car', 'Automotive'), ('bike', 'Automotive'), ('scooter', 'Automotive'), ('accessories', 'Automotive'), ('other', 'Other')], default='camera', help_text='The specific type of product within the category', max_length=50),
        ),
        migrations.AddField(
            model_name='product',
            name='purchase_year',
            field=models.CharField(blank=True, help_text='Year when the item was purchased', max_length=4, null=True),
        ),
        migrations.AddField(
            model_name='product',
            name='status_changed_at',
            field=models.DateTimeField(auto_now=True, help_text='When the status was last changed'),
        ),
        migrations.AddField(
            model_name='product',
            name='status_message',
            field=models.TextField(blank=True, help_text='Message explaining status change to the owner', null=True),
        ),
        migrations.AddField(
            model_name='productimage',
            name='order',
            field=models.PositiveIntegerField(default=0, help_text='Order of the image, with the lowest order being the primary image'),
        ),
        migrations.AlterField(
            model_name='product',
            name='average_rating',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Average rating from all reviews', max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AlterField(
            model_name='product',
            name='category',
            field=models.CharField(choices=[('Photography & Videography', 'Photography & Videography'), ('Sports & Fitness', 'Sports & Fitness'), ('Tools & Equipment', 'Tools & Equipment'), ('Electronics', 'Electronics'), ('Musical Instruments', 'Musical Instruments'), ('Party & Events', 'Party & Events'), ('Fashion & Accessories', 'Fashion & Accessories'), ('Home & Garden', 'Home & Garden'), ('Books & Media', 'Books & Media'), ('Toys & Games', 'Toys & Games'), ('Automotive', 'Automotive'), ('Other', 'Other')], default='Photography & Videography', help_text='The main category this product belongs to', max_length=50),
        ),
        migrations.AlterField(
            model_name='product',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When the product was first listed'),
        ),
        migrations.AlterField(
            model_name='product',
            name='description',
            field=models.TextField(blank=True, help_text='Detailed description of the product', null=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='location',
            field=models.CharField(blank=True, help_text='Location where the product is available for pickup/delivery', max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='owner',
            field=models.ForeignKey(default=0, help_text='The user who owns this product', on_delete=django.db.models.deletion.CASCADE, related_name='products', to=settings.AUTH_USER_MODEL),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='product',
            name='rental_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Number of times this product has been rented'),
        ),
        migrations.AlterField(
            model_name='product',
            name='security_deposit',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Security deposit required for renting', max_digits=10, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='product',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft - Pending Review'), ('active', 'Active - Available for Rent'), ('maintenance', 'Under Maintenance - Needs Action'), ('suspended', 'Suspended - Listing Disabled')], db_index=True, default='draft', help_text='Current status of the product listing', max_length=20),
        ),
        migrations.AlterField(
            model_name='product',
            name='title',
            field=models.CharField(default=0, help_text='The title of the product listing', max_length=200),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='product',
            name='unavailable_dates',
            field=models.JSONField(blank=True, default=list, help_text='Dates when the product is not available for rental'),
        ),
        migrations.AlterField(
            model_name='product',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='When the product was last updated'),
        ),
        migrations.AlterField(
            model_name='product',
            name='views_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Number of times this product has been viewed'),
        ),
        migrations.AlterField(
            model_name='productimage',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When this image was uploaded'),
        ),
        migrations.AlterField(
            model_name='productimage',
            name='product',
            field=models.ForeignKey(help_text='The product this image belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='advertisements.product'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['product_type'], name='advertiseme_product_ea1fd7_idx'),
        ),
        migrations.AddField(
            model_name='pricingtier',
            name='product',
            field=models.ForeignKey(help_text='The product this pricing tier belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='pricing_tiers', to='advertisements.product'),
        ),
        migrations.DeleteModel(
            name='PricingOption',
        ),
        migrations.AlterUniqueTogether(
            name='pricingtier',
            unique_together={('product', 'duration_unit')},
        ),
    ]
